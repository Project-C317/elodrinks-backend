{
	"info": {
		"_postman_id": "5e0aa2b9-9feb-4a6b-a418-4231b3857a5f",
		"name": "EloDrinks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37727279"
	},
	"item": [
		{
			"name": "UserTests",
			"item": [
				{
					"name": "ListUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MjMyYjIwZjlkMWQ4NjM5ZDBmMWQ4MiIsImVtYWlsIjoiYW5pbmhhQGVtYWlsLmNvbSIsImlhdCI6MTc0NzEzNjM5NywiZXhwIjoxNzQ3MTM5OTk3fQ.nTLGVaiXQWPFteI8QbdRprNkDTn7qTkrYw5pAaiT0tk",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/68233542de918be51644ab99",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"68233542de918be51644ab99"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404 (deleted resource)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/68126bfa1eaa6b8074d75ad1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"68126bfa1eaa6b8074d75ad1"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateUserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"Name\": \"jofrey\",\n  \"Surname\": \"dont\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/6835fe049b0c36820db9ec4e",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"6835fe049b0c36820db9ec4e"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code === 200).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Email\": \"testedeploy@email.com\",\r\n  \"Password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegisterAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 500 (duplicated)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Test-postman\",\r\n  \"Surname\": \"Test-postman\",\r\n  \"Age\": 30,\r\n  \"Cpf\": \"12345634442\",\r\n  \"Email\": \"adminpostman@email.com\",\r\n  \"Phone\": \"99999-9999\",\r\n  \"Password\": \"admin123\",\r\n  \"Role\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "LoginAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code === 200).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Email\": \"admin@email.com\",\r\n  \"Password\": \"admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "RegisterUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 500 (duplicated)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(500);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"testes_postman\",\r\n  \"Surname\": \"testes_postman\",\r\n  \"Age\": 45,\r\n  \"Cpf\": \"12345678933\",\r\n  \"Email\": \"testes_postman@email.com\",\r\n  \"Phone\": \"99988-7732\",\r\n  \"Password\": \"123456\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ServiceTests",
			"item": [
				{
					"name": "CreateService",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Serviço de Casamento\",\r\n  \"BasePrice\": 10500,\r\n  \"CostPerClient\": 200,\r\n  \"ClientQuantity\": 100,\r\n  \"EventDuration\": 6,\r\n  \"EventDate\": \"2025-06-15T15:00:00.000Z\",\r\n  \"optionalItems\": [],\r\n  \"FinalBudget\": 5000,\r\n  \"DownPayment\": 1500,\r\n  \"FinalPayment\": 3500\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/services",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListServices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/services",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"services"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetServiceById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/services/6836502693f8001a5d9f29a4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"services",
								"6836502693f8001a5d9f29a4"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateServiceById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"Serviço de Casamento\",\r\n    \"BasePrice\": 12500,\r\n    \"CostPerClient\": 200,\r\n    \"ClientQuantity\": 100,\r\n    \"EventDuration\": 6,\r\n    \"EventDate\": \"2025-06-15T15:00:00.000Z\",\r\n    \"optionalItems\": [],\r\n    \"FinalBudget\": 5000,\r\n    \"DownPayment\": 1500,\r\n    \"FinalPayment\": 3500\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/services/6836502693f8001a5d9f29a4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"services",
								"6836502693f8001a5d9f29a4"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteServiceById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404 (deleted resource)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/services/681a8b338fb8570a4dfd2b45",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"services",
								"681a8b338fb8570a4dfd2b45"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OptionalItemTests",
			"item": [
				{
					"name": "CreateOptionalItem",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Name\": \"Decoração Premium 02\",\r\n  \"PricePerUnit\": 150,\r\n  \"Quantity\": 1,\r\n  \"IndividualPrice\": 300,\r\n  \"Category\": \"Decoração\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/optional-items",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"optional-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "ListOptionalItems",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/optional-items",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"optional-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetOptionalItemById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/optional-items/6839a484a7b3c9fdf5047668",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"optional-items",
								"6839a484a7b3c9fdf5047668"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateOptionalItemById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"Mojito\",\r\n    \"PricePerUnit\": 150,\r\n    \"Quantity\": 5,\r\n    \"IndividualPrice\": 300\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/optional-items/684223a6569eff77f4affb5b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"optional-items",
								"684223a6569eff77f4affb5b"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteOptionalItemById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response is JSON\", function () {\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 403 (expired token)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 404 (deleted resource)\", () => {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NDIxNDFkNTY5ZWZmNzdmNGFmZmFmYyIsImVtYWlsIjoiYWRtaW5AZW1haWwuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQ5MTYzOTU4LCJleHAiOjE3NDkxNjc1NTh9.jrooQPJYO23ad1oi6jUwXqYguorrFLC0ZzYk51Ai3SQ",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/optional-items/681a8ada8fb8570a4dfd2b42",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"optional-items",
								"681a8ada8fb8570a4dfd2b42"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}